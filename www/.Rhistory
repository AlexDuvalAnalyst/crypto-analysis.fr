dtmax <- substr(max(dp$dateheure),1,10)
dtminh <- substr(min(dh$dateheure),1,4)
dtmaxh <- substr(max(dh$dateheure),1,4)
highchart(type = "stock")%>%
hc_legend(enabled = "TRUE")%>%
hc_add_series(name = paste("p10-p90 historique",dtminh,"-",dtmaxh),totalhist[totalhist$variable == "haut",],"arearange",
hcaes(totalhist[totalhist$variable == "haut",]$date,
low = totalhist[totalhist$variable == "bas", 1],
high = totalhist[totalhist$variable == "haut", 1]),visible = FALSE, fillOpacity = 0, opacity = 0.7,color = "darkgreen",lineWidth = 4,yAxis = 0)%>%
hc_add_series(name = paste("p10-p90"),total[total$variable == "percentile-90",],"areasplinerange",
hcaes(total[total$variable == "percentile-90",]$date,
low = total[total$variable == "percentile-10", 2],
high = total[total$variable == "percentile-90", 2]),color = "red", lineWidth = 3, yAxis = 0)%>%
hc_add_series(name = paste("moyenne historique",dtminh,"-",dtmaxh),totalhist[totalhist$variable == "moyenne",],"spline",
hcaes(totalhist[totalhist$variable == "moyenne",]$date,
totalhist[totalhist$variable == "moyenne", 1]),color = "darkgreen", opacity = 0.7,lineWidth = 4, yAxis = 0, visible = FALSE)%>%
hc_add_series(name = paste("moyenne"),total[total$variable == "moyenne",],"spline",
hcaes(total[total$variable == "moyenne",]$date,
total[total$variable == "moyenne", 2]),color = "deepskyblue",lineWidth = 3, yAxis = 0)%>%
hc_add_series(name = "debit journalier", visible = FALSE, aggdeb, "spline",
hcaes(aggdeb$date, round(aggdeb[,2],1)), color = "darkblue", lineWidth = 2, yAxis = 1)%>%
hc_add_series(name = "Coefficient de marée", visible = FALSE, aggcoef, "spline",
hcaes(aggcoef$date, round(aggcoef[,2],1)), color = "darkgreen", lineWidth = 2, yAxis = 2)%>%
hc_add_series(
visible = TRUE,
type = "gantt",
legend = list(
enabled = TRUE
),
opacity = 0.7,
name = "Changement de sonde",
data = data_sonde, yAxis = 3
)%>%
hc_title(
text = paste(mes_param,"à",mes_lieu,"en",unit,dtmin,"-",dtmax),
margin = 15,
align = "center",
style = list(color = "#0762a2",fontWeight = 'bold',fontSize = "22px", textShadow = "#000000 0.5px 0.5px 0.5px",  useHTML = TRUE)
)%>%
hc_xAxis(type='datetime', labels = list(style = list(fontSize = "16px", color = "black")))%>%
hc_yAxis_multiples(create_axis(naxis = 4, heights = c(8, 2, 1, 0.5)))%>%
hc_rangeSelector(enabled = FALSE)%>%
hc_add_theme(thm) %>%
hc_plotOptions(
splint = list(color = "deepskyblue"),
areasplinerange = list(opacity = 0.5,fillColor = "red")
)%>%
hc_chart(
events = list(load = JS("function() {
var chart = this;
chart.update({
yAxis: {
labels: {
style: {
fontSize: '15px',
color: '#110B33',
fontWeight: 'bold'
}
}
},
xAxis: {
labels: {
style: {
fontSize: '15px',
color: '#110B33',
fontWeight: 'bold'
}
}
}
})
}
")),
zoomType = "x",
borderColor = "PaleTurquoise",
borderRadius = 10,
borderWidth = 5,
backgroundColor = list(
linearGradient = c(0, 0, 500, 500),
stops = list(
list(0, "rgb(248, 255, 254)"),
list(1, "rgb(225, 255, 252)")
)
)
)
}
distrib <- function(lieu,parametre,data){
mes_lieu <- unique(info_station[info_station$idlieu == lieu,]$displaylieu)
mes_param <- unique(info_station[info_station$idparametre == parametre,]$nomparametre)
unit <- unique(info_station[info_station$idparametre == parametre,]$unite)
mes_param_legend <- paste("De la",mes_param,sep = " ")
dp <- as.data.frame(data[1])
dp$dateheure <- as_datetime(dp$dateheure)
dh <- as.data.frame(data[2])
dh$dateheure <- as_datetime(dh$dateheure)
dtmin <- substr(min(dh$dateheure),1,4)
dtmax <- substr(max(dh$dateheure),1,4)
mini <- min(min(dh$valeurbrute, na.rm = T), min(dp$valeurbrute, na.rm = T))
maxi <- max(mean(dh$valeurbrute, na.rm = T), mean(dp$valeurbrute, na.rm = T))
maxi <- maxi+(maxi/2)
thm <- #création du thème pour les graph
hc_theme(
colors = c("#1a6ecc", "#434348", "#90ed7d"),
chart = list(
backgroundColor = "transparent",
style = list(fontFamily = "Source Sans Pro")
),
xAxis = list(
gridLineWidth = 1
),
yAxis = list(style = list(fontSize = "16px", color = "black"))
)
hchart(
density(dp$valeurbrute),
color = "#B71C1C", name =paste("Distribution",mes_param_legend," de la période sélectionnée"), opacity = 1
)%>%
hc_add_series(
name = paste("Distribution",mes_param_legend,"historique à",mes_lieu, dtmin,"-",dtmax),
density(dh$valeurbrute),color = "blue", type = 'area',
opacity = 0.5
)%>%
hc_plotOptions(
splint = list(color = "deepskyblue"),
areasplinerange = list(opacity = 0.5,fillColor = "lightgoldenrodyellow")
)%>%
hc_title(
text = paste("Distribution",mes_param_legend,"en",unit,"à",mes_lieu),
margin = 15,
align = "center",
style = list(color = "#0762a2",fontWeight = 'bold',fontSize = "22px",textShadow = "#000000 1px 1px 1px", useHTML = TRUE)
)%>%
hc_xAxis(title = list(text = paste(mes_param,unit,sep = " "), style = list(fontSize = "16px", color = "black",textShadow = "#000000 0.5px 0.5px 0.5px", useHTML = TRUE)),
pmin = mini, max = maxi,labels = list(style = list(fontSize = "16px", color = "black")))%>%
hc_yAxis(title = list(text = "Distribution (densité de mesures)", style = list(fontSize = "16px", color = "black",textShadow = "#000000 0.5px 0.5px 0.5px", useHTML = TRUE)),
labels = list(style = list(fontSize = "16px", color = "black")))%>%
hc_rangeSelector(enabled = FALSE)%>%
hc_add_theme(thm) %>%
hc_chart(
events = list(load = JS("function() {
var chart = this;
chart.update({
yAxis: {
labels: {
style: {
fontSize: '15px',
color: '#110B33',
fontWeight: 'bold'
}
}
},
xAxis: {
labels: {
style: {
fontSize: '15px',
color: '#110B33',
fontWeight: 'bold'
}
}
}
})
}
")),
zoomType = "x",
borderColor = "PaleTurquoise",
borderRadius = 10,
borderWidth = 5,
backgroundColor = list(
linearGradient = c(0, 0, 500, 500),
stops = list(
list(0, "rgb(248, 255, 254)"),
list(1, "rgb(225, 255, 252)")
)
)
)
}
lieu <- 8
parametre <- 5
data <- getdata(8,5, "2023-01-18","2023-01-23","Dates libres","","","")
dp <- as.data.frame(data[1])
dp$dateheure <- as_datetime(dp$dateheure)
dh <- as.data.frame(data[2])
dh$dateheure <- as_datetime(dh$dateheure)
min(dh$dateheure)
debhist <- substr(min(dh$dateheure, na.rm = T),1,4)
debhist
debhist <- substr(min(dh$dateheure,na.rm = T),1,4)
finhist <- substr(max(dh$dateheure, na.rm = T),1,4)
finhist
runApp('C:/Users/alexa/Desktop/projet_synapses/script/orientation.R')
runApp('C:/Users/alexa/Desktop/projet_synapses/script/orientation.R')
runApp('C:/Users/alexa/Desktop/projet_synapses/script/orientation.R')
lieu <- 5
parametre <- 5
mindate <- dbGetQuery(con, paste("select min(dateheure) from mesure where idlieu = ",lieu,"and idparametre = ",parametre,sep = ""))
mindate
runApp('C:/Users/alexa/Desktop/projet_synapses/script/orientation.R')
runApp('C:/Users/alexa/Desktop/projet_synapses/script/orientation.R')
mindate
as_datetime(minmdate)
as_datetime(mindate)
mindate <- dbGetQuery(con, paste("select min(dateheure) from mesure where idlieu = ",lieu,"and idparametre = ",parametre,sep = ""))[1]
mindate
mindate <- dbGetQuery(con, paste("select min(dateheure) from mesure where idlieu = ",lieu,"and idparametre = ",parametre,sep = ""))[1,]
mindate
runApp('C:/Users/alexa/Desktop/projet_synapses/script/orientation.R')
install.packages('shiny')
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
library(shiny); runApp('C:/Users/alexa/Desktop/projet_synapses/script/orientation.R')
library(shiny); runApp('C:/Users/alexa/Desktop/projet_synapses/script/orientation.R')
install.packages('htmltools')
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
library(shiny); runApp('C:/Users/alexa/Desktop/projet_synapses/script/orientation.R')
library(shinydashboard)
library(shinyjs) ## avec shinyjs on peut faire beaucoup de chose simplement, genre cacher, désactiver des objects...
options(encoding = 'UTF-8')
options(shiny.sanitize.errors = TRUE) #pour uniformiser les messages d'erreur
library(DT)
library(dplyr)
library(tidyverse)
library(kableExtra)
library(shiny)
library(lubridate)
library(highcharter)
library(data.table)
library(RSQLite)
library(RPostgres)
library(shinycssloaders)
library(shinyWidgets)
install.packages('htmltools')
install.packages('htmltools')
library(shiny); runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
?selectizeInput
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
library(shiny); runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
# shinyApp(ui, server)
# shinyApp(ui, server)
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
?actionButton
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
library(shiny); runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
library(shiny); runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
library(shiny); runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
library(shiny); runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
?virtualenv_install
library(shiny); runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
# récupérer la largeur de l'écran
screen_width <- sessionInfo()$screen$width
screen_width
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/test.R')
data <- tibble(
cluster = sample(7, 100, replace = TRUE),
x = rnorm(100),
y = rnorm(100)
)
plot_sequences <- function(data_set, width) {
label_data <- data_set %>%
summarise(
n = n(),
mean_x = mean(x),
mean_y = mean(y),
label = sprintf("N: %d\nMean x: %0.3f\nMean y: %0.3f", n, n, mean_x, mean_y)
)
ggplot(data, aes(x, y)) +
geom_point() +
geom_label(aes(x = 1.5, y = 1.5, label = label), label_data, size = 4 / 900 * width)
}
plot_sequences(session$clientData[["output_ap_plot_width"]])
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/test.R')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
runApp('C:/Users/alexa/Desktop/projet_perso/climat/ui.r')
library(shiny); runApp('C:/Users/alexa/Desktop/projet_perso/newcrypto/newcrypto.R')
head(coinlist)
coinlist <- as.data.frame(crypto_list())
head(coinlist)
runApp('C:/Users/alexa/Desktop/projet_perso/newcrypto/newcrypto.R')
head(coinlist)
top_crypto <- coinlist[coinlist$rank <= 20,c(1,2,3,5,9,10)]
top_cryptoi
top_crypto
runApp('C:/Users/alexa/Desktop/projet_perso/newcrypto/newcrypto.R')
top_crypto
id_cryp = 3
dt <- as.data.frame(crypto_history(interval = "weekly",start_date = as_datetime("2022-01-01"),coinlist %>% filter(id %in% id_cryp)))[,c(1,8,9)]
head(dt)
library(shiny); runApp('C:/Users/alexa/Desktop/projet_perso/newcrypto/newcrypto.R')
setwd("C:/Users/alexa/Desktop/projet_perso/newcrypto/www")
library(shiny); runApp('C:/Users/alexa/Desktop/projet_perso/newcrypto/newcrypto.R')
