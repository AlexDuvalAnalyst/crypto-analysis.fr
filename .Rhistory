fontSize: '15px',
color: '#110B33',
fontWeight: 'bold'
}
}
}
})
}
")),
zoomType = "x",
borderColor = "PaleTurquoise",
borderRadius = 10,
borderWidth = 5,
backgroundColor = list(
linearGradient = c(0, 0, 500, 500),
stops = list(
list(0, "rgb(248, 255, 254)"),
list(1, "rgb(225, 255, 252)")
)
)
)
}
ctab <- function(lieu,parametre,data){
dp <- as.data.frame(data[1])
dp$dateheure <- as_datetime(dp$dateheure)
dh <- as.data.frame(data[2])
dh$dateheure <- as_datetime(dh$dateheure)
moy <- round(mean(dh$valeurbrute),1)
moydp <- round(mean(dp$valeurbrute),1)
median <- round(median(dh$valeurbrute),1)
mediandp <- round(median(dp$valeurbrute),1)
p10 <- round(aggregate(dh$valeurbrute, by = list(dh$idparametre), Percentile(10))[,2],1)
p90 <- round(aggregate(dh$valeurbrute, by = list(dh$idparametre), Percentile(90))[,2],1)
p10dp <- round(aggregate(dp$valeurbrute, by = list(dp$idparametre), Percentile(10))[,2],1)
p90dp <- round(aggregate(dp$valeurbrute, by = list(dp$idparametre), Percentile(90))[,2],1)
if(parametre != 6 & parametre != 8 & length(dp$valeurbrute) > 0){
seuil <- as.numeric(formparam(parametre)[6])
assign(paste(lieu,"pourc",parametre,sep=""),round(((nrow(dp[dp$idparametre == parametre & dp$valeurbrute >= seuil,])/nrow(dp[dp$idparametre == parametre,]))*100),1))
assign(paste(lieu,"pourchist",parametre,sep=""),round(((nrow(dh[dh$idparametre == parametre & dh$valeurbrute >= seuil,])/nrow(dh[dh$idparametre == parametre,]))*100),1))
}
if(parametre == 6 & length(dp$valeurbrute) > 0){
seuil <- as.numeric(formparam(parametre)[6])
assign(paste(lieu,"pourc",parametre,sep=""),round(((nrow(dp[dp$idparametre == parametre & dp$valeurbrute < seuil,])/nrow(dp[dp$idparametre == parametre,]))*100),1))
assign(paste(lieu,"pourchist",parametre,sep=""),round(((nrow(dh[dh$idparametre == parametre & dh$valeurbrute < seuil,])/nrow(dh[dh$idparametre == parametre,]))*100),1))
}
if(parametre != 8){
lgn1 <- c(moydp,mediandp,p10dp,p90dp,get(paste(lieu,"pourc",parametre,sep = "")))
lgn2 <- c(moy,median,p10,p90,get(paste(lieu,"pourchist",parametre,sep = "")))
lgn3 <- round((lgn1-lgn2),1)
tab <- as.data.frame(rbind(lgn1,lgn2,lgn3))
colnames(tab) <- c("moyenne","médiane","p10","p90",formparam(parametre)[4])
rname <- c("Périodes d'étude","Données historiques",formparam(parametre)[5])
row.names(tab)<-rname
}else{
lgn1 <- c(moydp,mediandp,p10dp,p90dp)
lgn2 <- c(moy,median,p10,p90)
lgn3 <- round((lgn1-lgn2),1)
tab <- as.data.frame(rbind(lgn1,lgn2,lgn3))
colnames(tab) <- c("moyenne","médiane","p10","p90")
rname <- c("Périodes d'étude","Données historiques",formparam(parametre)[5]) #formparam(parametre)[5]
row.names(tab)<-rname
}
if(max(as.numeric(dp$dateheure))-min(as.numeric(dp$dateheure)) > 604800){
datmin <- min(substr(dp$dateheure,1,7))
datmax <- max(substr(dp$dateheure,1,7))
}else{
datmin <- min(substr(dp$dateheure,1,10))
datmax <- max(substr(dp$dateheure,1,10))
}
if(parametre != 8){
tab %>%
kbl(caption = paste("Bilan de la période sélectionnée", datmin,"-",datmax, formparam(parametre)[3],"à",formlieu(lieu)),align = 'c') %>%
kable_styling(bootstrap_options = c("hover", "condensed"),font_size = 20)%>%
row_spec(0, background = "lightgrey", font_size = 16)%>%
column_spec(6,background = "#c5d533")%>%
row_spec(3,background = "#F0F8FF")
}else{
tab %>%
kbl(caption = paste("Bilan de la période sélectionnée", datmin,"-",datmax, formparam(parametre)[3],"à",formlieu(lieu)),align = 'c') %>%
kable_styling(bootstrap_options = c("hover", "condensed"),font_size = 20)%>%
row_spec(0, background = "lightgrey", font_size = 16)%>%
row_spec(3,background = "#F0F8FF")
}
}
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- sort(lieux$idlieu, decreasing = T)
liste_pages <- c()
for(i in lieux){
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",i))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from refqualite where idparametre != 4 and idparametre != 7 and idlieu = ",i))
parametres <- parametres$idparametre
#if(i != 1 & i!= 3){
parametres <- append(parametres,25)
#}
parametres <- sort(parametres, decreasing = F)
commande_page <- paste("navbarMenu(","'",li,"'",",",sep = "")
for(j in parametres){
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",j))[1,]
parametre <- str_replace(parametre," ","")
but <-  paste("buttoninput",li,parametre,sep = "")
name <- paste("input",li,parametre,sep = "")
g1 <- paste(li,parametre,"graph",sep = "")
g2 <- paste(li,parametre,"distrib",sep = "")
ex <-  paste("exit",li,parametre,sep = "")
prof <- paste("pfd",li,parametre,sep = "")
g3 <- paste(li,parametre,"tab",sep = "")
if((i == 5 | i == 7) & j != 9){
assign(paste(li,parametre,sep = ""),paste("tabPanel('",j,"',
shinyjs::hidden(sidebarPanel(style = panel,width = '',imp('",name,"',",i,",",j,"),actionButton('",but,"', 'Valider',style = action),
actionButton('",ex,"', 'X',style = action2))),
fluidRow(
column(width = 3,style ='position: absolute;top:23%;left:5%;z-index:60;',
div(style = 'color:#701110;position: absolute;top:-70%;left:-10%;font-size:16px;font-weight:bold','Mesures de surface'),
materialSwitch(inputId = '",prof,"', label = '',
status = 'danger')),
column(width = 6,align='center',style = 'background-color: #c5d533;padding-right:20px;padding-left:25px;',
fluidRow(style = 'margin-top:-1vh;height:88.5vh;background-color:white',div(style = hopt,withSpinner(highchartOutput('",g1,"',height = '87vh'),hide.ui =FALSE,type=8,color.background='blue')))
),
column(width = 6,align='center',style = 'background-color: #c5d533;padding-left:20px;padding-right:25px;',
fluidRow(style = 'overflow-y:scroll;margin-top:-1vh;height:30vh;',div(style = topt,htmlOutput('",g3,"'))),
fluidRow(style = 'margin-top:1vh;height:57.5vh;',div(style = hopt,withSpinner(highchartOutput('",g2,"', height = '56vh'),hide.ui =FALSE,type=8,color.background='blue'))))))",sep = ""))
}else{
assign(paste(li,parametre,sep = ""),paste("tabPanel('",j,"',
shinyjs::hidden(sidebarPanel(style = panel,width = '',imp('",name,"',",i,",",j,"),actionButton('",but,"', 'Valider',style = action),
actionButton('",ex,"', 'X',style = action2))),
fluidRow(
column(width = 6,align='center',style = 'background-color: #c5d533;padding-right:20px;padding-left:25px;',
fluidRow(style = 'margin-top:-1vh;height:88.5vh;background-color:white',div(style = hopt,withSpinner(highchartOutput('",g1,"',height = '87vh'),hide.ui =FALSE,type=8,color.background='blue')))
),
column(width = 6,align='center',style = 'background-color: #c5d533;padding-left:20px;padding-right:25px;',
fluidRow(style = 'overflow-y:scroll;margin-top:-1vh;height:30vh;',div(style = topt,htmlOutput('",g3,"'))),
fluidRow(style = 'margin-top:1vh;height:57.5vh;',div(style = hopt,withSpinner(highchartOutput('",g2,"', height = '56vh'),hide.ui =FALSE,type=8,color.background='blue'))))))",sep = ""))
}
if(j != tail(parametres,1)){
text <- paste("eval(parse(text = ",paste(li,parametre,sep = ""),")),", sep = "")
commande_page <- paste(commande_page,text)
}else{
text <- paste("eval(parse(text = ",paste(li,parametre,sep = ""),"))", sep = "")
commande_page <- paste(commande_page,text,")",sep = "")
}
}
assign(paste(li), commande_page)
liste_pages <- append(liste_pages,paste(li))
}
name <- 'valdesleuxchlorophylle'
lieu <- 3
parametre <- 25
reqinf <- paste("select min(dateheure) from mesure where idlieu = ",lieu," and idparametre = ",parametre,sep = "")
borninf <<- as_datetime(dbGetQuery(con,reqinf)[1,1])
borninf
dbGetQuery(con, "select*from mesure where idlieu = 3 and idparametre = 25 order by dateheure desc limit 10")
dbGetQuery(con, "select*from mesure where idlieu = 1 and idparametre = 25 order by dateheure desc limit 10")
runApp('Documents/projet_synapses/script/orientation.R')
runApp('Documents/projet_synapses/script/orientation.R')
dbGetQuery(con, "select*from mesure where idlieu = 1 and idparametre = 25 order by dateheure desc limit 10")
dbGetQuery(con, "select*from mesure where idlieu = 1 and idparametre = 5 order by dateheure desc limit 10")
dbGetQuery(con, "select*from mesure where idlieu = 1 and idparametre = 25 and idmethode isnot NULL order by dateheure desc limit 10")
dbGetQuery(con, "select*from mesure where idlieu = 1 and idparametre = 25 and idmethode ISNULL order by dateheure desc limit 10")
dbGetQuery(con, "select*from mesure where idlieu = 1 and idparametre = 25 and idmethode ISNOTNULL order by dateheure desc limit 10")
dbGetQuery(con, "select*from mesure where idlieu = 1 and idparametre = 25 and idmethode NOTNULL order by dateheure desc limit 10")
runApp('Documents/projet_synapses/script/orientation.R')
runApp('Documents/projet_synapses/script/orientation.R')
runApp('orientation.R')
runApp('Documents/projet_synapses/script/orientation.R')
runApp('Documents/projet_synapses/script/orientation.R')
runApp('Documents/projet_synapses/script/orientation.R')
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
for(k in lieux){
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- paste("input$exit",li,parametre,sep ="")
}
}
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
for(k in lieux){
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- paste("input$exit",li,parametre,sep ="")
}
}
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
for(k in lieux){
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- paste("input$exit",li,parametre,sep ="")
}
}
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
exitname
runApp('Documents/projet_synapses/script/orientation.R')
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
list_button_exit <- list()
for(k in lieux){
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- paste("input$exit",li,parametre,sep ="")
list_button_exit <- append(liste_button_exit, exitname)
}
}
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
list_button_exit <- list()
for(k in lieux){
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- paste("input$exit",li,parametre,sep ="")
list_button_exit <- append(list_button_exit, exitname)
}
}
list_button_exit
runApp('Documents/projet_synapses/script/orientation.R')
list_button_exit
exitname
list(eval(parse(text = "input$exitbaliseAfondturbidité")),input$exitbo,input$exitbtu,input$exitbs,input$exitbc,input$exitft,input$exitfo,input$exitftu,input$exitfs,input$exitfc,input$exittt,input$exitto,
input$exitttu,input$exitts,input$exittc,input$exitvo,input$exitvtu,input$exitvc,input$exitrt,input$exitro,input$exitrtu,input$exitrs,input$exitrc)
list(eval(parse(text = "input$exitbaliseAfondturbidité")))
exitname
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
list_button_exit <- list()
for(k in lieux){
k <- 8
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
l <- 5
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- paste("input$exit",li,parametre,sep ="")
list_button_exit <- append(list_button_exit, exitname)
}
}
exitname
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
list_button_exit <- list()
for(k in lieux){
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- eval(parse(text = paste("input$exit",li,parametre,sep ="")))
list_button_exit <- append(liste_button_exit, exitname)
}
}
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
list_button_exit <- list()
for(k in lieux){
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- paste("eval(parse(text = paste('input$exit',li,parametre,sep ='')))")
list_button_exit <- append(liste_button_exit, exitname)
}
}
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
list_button_exit <- list()
for(k in lieux){
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- paste("eval(parse(text = paste('input$exit',li,parametre,sep ='')))")
list_button_exit <- append(list_button_exit, exitname)
}
}
list_button_exit
exitname
parse(text = exitname)
runApp('Documents/projet_synapses/script/orientation.R')
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
list_button_exit <- "list("
for(k in lieux){
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- paste("eval(parse(text = paste('input$exit',li,parametre,sep ='')))")
list_button_exit <- paste(list_button_exit, exitname,",")
}
}
list_button_exit
tail(parametres,1)
runApp('Documents/projet_synapses/script/orientation.R')
list_button_exit
runApp('Documents/projet_synapses/script/orientation.R')
runApp('Documents/projet_synapses/script/orientation.R')
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
list_button_exit <- "list("
for(k in lieux){
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- paste("eval(parse(text = paste('input$exit',li,parametre,sep ='')))")
if(k = tail(lieux,1) & l = tail(parametres,1)){
list_button_exit <- paste(list_button_exit,exitname)
}else{
list_button_exit <- paste(list_button_exit,exitname,",")
}
}
}
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
list_button_exit <- "list("
for(k in lieux){
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- paste("eval(parse(text = paste('input$exit',li,parametre,sep ='')))")
if(k = tail(lieux,1) & l = tail(parametres,1)){
list_button_exit <- paste(list_button_exit,exitname)
}else{
list_button_exit <- paste(list_button_exit,exitname,",")
}
}
}
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
list_button_exit <- "list("
for(k in lieux){
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- paste("eval(parse(text = paste('input$exit',li,parametre,sep ='')))")
if(k == tail(lieux,1) & l == tail(parametres,1)){
list_button_exit <- paste(list_button_exit,exitname)
}else{
list_button_exit <- paste(list_button_exit,exitname,",")
}
}
}
list_button_exit
runApp('Documents/projet_synapses/script/orientation.R')
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
list_button_exit <- "list("
for(k in lieux){
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- paste("eval(parse(text = paste('input$exit',li,parametre,sep ='')))")
if(k == tail(lieux,1) & l == tail(parametres,1)){
list_button_exit <- paste(list_button_exit,exitname,")")
}else{
list_button_exit <- paste(list_button_exit,exitname,",")
}
}
}
list_button_exit
runApp('Documents/projet_synapses/script/orientation.R')
list_button_exit
runApp('Documents/projet_synapses/script/orientation.R')
exitname
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
list_button_exit <- "list("
for(k in lieux){
k <- 8
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
l <- 5
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- paste("eval(parse(text = paste('input$exit',li,parametre,sep ='')))")
if(k == tail(lieux,1) & l == tail(parametres,1)){
list_button_exit <- paste(list_button_exit,exitname,")")
}else{
list_button_exit <- paste(list_button_exit,exitname,",",sep = "")
}
}
}
exitname
runApp('Documents/projet_synapses/script/orientation.R')
runApp('Documents/projet_synapses/script/orientation.R')
runApp('Documents/projet_synapses/script/orientation.R')
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
list_button_exit <- list()
for(k in lieux){
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- paste("eval(parse(text = paste('input$exit',li,parametre,sep ='')))")
list_button_exit <- append(list_button_exit, exitname)
}
}
exitname
lieux <- dbGetQuery(con ,"select distinct idlieu from lieu where idlieu != 10 and idlieu != 2 and idlieu != 4 and idlieu != 6")
lieux <- lieux$idlieu
lieux <- sort(lieux, decreasing = T)
list_button_exit <- list()
for(k in lieux){
li <- dbGetQuery(con, paste("select nomlieu from lieu where idlieu = ",k))[1,]
parametres <- dbGetQuery(con ,paste("select distinct idparametre from mesure where idparametre != 4 and idparametre != 7 and idlieu = ",k))
parametres <- parametres$idparametre
for(l in parametres){
parametre <- dbGetQuery(con, paste("select nomparametre from parametre where idparametre = ",l))[1,]
parametre <- str_replace(parametre," ","")
exitname <- paste('input$exit',li,parametre,sep ='')
list_button_exit <- append(list_button_exit, exitname)
}
}
exitname
list_button_exit
list_button_exit[1]
list_button_exit[[1]
]
list(for(i in 1:10){i})
for(i in 1:10){i}
for(i in 1:10){return(i)}
for(i in 1:10){print(i)}
list(for(i in 1:10){print(i)})
list
tt <- list(list_button_exit[1:length(list_button_exit)])
tt
runApp('Documents/projet_synapses/script/orientation.R')
runApp('Documents/projet_synapses/script/orientation.R')
runApp('Documents/projet_synapses/script/orientation.R')
library(shiny); runApp('Documents/projet_perso/crypto/newcrypto.R')
runApp('Documents/projet_perso/crypto/newcrypto.R')
library(shiny); runApp('Documents/newcrypto/newcrypto.R')
runApp('Documents/newcrypto/newcrypto.R')
runApp('Documents/newcrypto/newcrypto.R')
runApp('Documents/newcrypto/newcrypto.R')
runApp('Documents/newcrypto/newcrypto.R')
runApp('Documents/newcrypto/newcrypto.R')
library(lubridate)
as_datetime('2023-07-05 22:00:00')
as.numeric(as_datetime('2023-07-05 22:00:00'))
as_datetime(1688594400)
as_datetime(1688594400)
as_datetime(1667264892567)
as_datetime(1667264892)
as_datetime(1667343600)
library(lubridate)
as_datetime(1338864000)
setwd("~/Documents/git/crypto-analysis")
setwd("~/Documents/git/crypto-analysis")
setwd("~/Documents/git/crypto-analysis.fr")
